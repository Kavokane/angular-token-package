{"version":3,"file":"angular-token.mjs","sources":["../../../projects/angular-token/src/lib/angular-token.token.ts","../../../projects/angular-token/src/lib/angular-token.service.ts","../../../projects/angular-token/src/lib/angular-token.interceptor.ts","../../../projects/angular-token/src/lib/angular-token.module.ts","../../../projects/angular-token/src/angular-token.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const ANGULAR_TOKEN_OPTIONS = new InjectionToken('ANGULAR_TOKEN_OPTIONS');\r\n","import { Injectable, Optional, Inject, PLATFORM_ID } from '@angular/core';\r\nimport { ActivatedRoute, Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { isPlatformServer } from '@angular/common';\r\n\r\nimport { Observable, fromEvent, interval, BehaviorSubject } from 'rxjs';\r\nimport { pluck, filter, share, finalize } from 'rxjs/operators';\r\n\r\nimport { ANGULAR_TOKEN_OPTIONS } from './angular-token.token';\r\n\r\nimport {\r\n  SignInData,\r\n  RegisterData,\r\n  UpdatePasswordData,\r\n  ResetPasswordData,\r\n\r\n  UserType,\r\n  UserData,\r\n  AuthData,\r\n  ApiResponse,\r\n\r\n  AngularTokenOptions,\r\n\r\n  TokenPlatform,\r\n  TokenInAppBrowser,\r\n} from './angular-token.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AngularTokenService implements CanActivate {\r\n\r\n  get currentUserType(): string {\r\n    if (this.userType.value != null) {\r\n      return this.userType.value.name;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  get currentUserData(): UserData {\r\n    return this.userData.value;\r\n  }\r\n\r\n  get currentAuthData(): AuthData {\r\n    return this.authData.value;\r\n  }\r\n\r\n  get apiBase(): string {\r\n    console.warn('[angular-token] The attribute .apiBase will be removed in the next major release, please use' +\r\n    '.tokenOptions.apiBase instead');\r\n    return this.options.apiBase;\r\n  }\r\n\r\n  get tokenOptions(): AngularTokenOptions {\r\n    return this.options;\r\n  }\r\n\r\n  set tokenOptions(options: AngularTokenOptions) {\r\n    this.options = (<any>Object).assign(this.options, options);\r\n  }\r\n\r\n  private options: AngularTokenOptions;\r\n  public userType: BehaviorSubject<UserType> = new BehaviorSubject<UserType>(null);\r\n  public authData: BehaviorSubject<AuthData> = new BehaviorSubject<AuthData>(null);\r\n  public userData: BehaviorSubject<UserData> = new BehaviorSubject<UserData>(null);\r\n  private global: Window | any;\r\n\r\n  private localStorage: Storage | any = {};\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject(ANGULAR_TOKEN_OPTIONS) config: any,\r\n    @Inject(PLATFORM_ID) private platformId: Object,\r\n    @Optional() private activatedRoute: ActivatedRoute,\r\n    @Optional() private router: Router\r\n  ) {\r\n    this.global = (typeof window !== 'undefined') ? window : {};\r\n\r\n    if (isPlatformServer(this.platformId)) {\r\n\r\n      // Bad pratice, needs fixing\r\n      this.global = {\r\n        open: (): void => null,\r\n        location: {\r\n          href: '/',\r\n          origin: '/'\r\n        }\r\n      };\r\n\r\n      // Bad pratice, needs fixing\r\n      this.localStorage.setItem = (): void => null;\r\n      this.localStorage.getItem = (): void => null;\r\n      this.localStorage.removeItem = (): void => null;\r\n    } else {\r\n      this.localStorage = localStorage;\r\n    }\r\n\r\n    const defaultOptions: AngularTokenOptions = {\r\n      apiPath:                    null,\r\n      apiBase:                    null,\r\n\r\n      signInPath:                 'auth/sign_in',\r\n      signInRedirect:             null,\r\n      signInStoredUrlStorageKey:  null,\r\n\r\n      signOutPath:                'auth/sign_out',\r\n      validateTokenPath:          'auth/validate_token',\r\n      signOutFailedValidate:      false,\r\n\r\n      registerAccountPath:        'auth',\r\n      deleteAccountPath:          'auth',\r\n      registerAccountCallback:    this.global.location.href,\r\n\r\n      updatePasswordPath:         'auth',\r\n\r\n      resetPasswordPath:          'auth/password',\r\n      resetPasswordCallback:      this.global.location.href,\r\n\r\n      userTypes:                  null,\r\n      loginField:                 'email',\r\n\r\n      oAuthBase:                  this.global.location.origin,\r\n      oAuthPaths: {\r\n        github:                   'auth/github'\r\n      },\r\n      oAuthCallbackPath:          'oauth_callback',\r\n      oAuthWindowType:            'newWindow',\r\n      oAuthWindowOptions:         null,\r\n\r\n      oAuthBrowserCallbacks: {\r\n        github:                   'auth/github/callback',\r\n      },\r\n    };\r\n\r\n    const mergedOptions = (<any>Object).assign(defaultOptions, config);\r\n    this.options = mergedOptions;\r\n\r\n    if (this.options.apiBase === null) {\r\n      console.warn(`[angular-token] You have not configured 'apiBase', which may result in security issues. ` +\r\n                   `Please refer to the documentation at https://github.com/neroniaky/angular-token/wiki`);\r\n    }\r\n\r\n    this.tryLoadAuthData();\r\n  }\r\n\r\n  userSignedIn(): boolean {\r\n    if (this.authData.value == null) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (this.userSignedIn()) {\r\n      return true;\r\n    } else {\r\n      // Store current location in storage (usefull for redirection after signing in)\r\n      if (this.options.signInStoredUrlStorageKey) {\r\n        this.localStorage.setItem(\r\n          this.options.signInStoredUrlStorageKey,\r\n          state.url\r\n        );\r\n      }\r\n\r\n      // Redirect user to sign in if signInRedirect is set\r\n      if (this.router && this.options.signInRedirect) {\r\n        this.router.navigate([this.options.signInRedirect]);\r\n      }\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * Actions\r\n   *\r\n   */\r\n\r\n  // Register request\r\n  registerAccount(registerData: RegisterData, additionalData?: any): Observable<ApiResponse> {\r\n\r\n    registerData = Object.assign({}, registerData);\r\n\r\n    if (registerData.userType == null) {\r\n      this.userType.next(null);\r\n    } else {\r\n      this.userType.next(this.getUserTypeByName(registerData.userType));\r\n      delete registerData.userType;\r\n    }\r\n\r\n    if (\r\n      registerData.password_confirmation == null &&\r\n      registerData.passwordConfirmation != null\r\n    ) {\r\n      registerData.password_confirmation = registerData.passwordConfirmation;\r\n      delete registerData.passwordConfirmation;\r\n    }\r\n\r\n    if (additionalData !== undefined) {\r\n      registerData.additionalData = additionalData;\r\n    }\r\n\r\n    const login = registerData.login;\r\n    delete registerData.login;\r\n    registerData[this.options.loginField] = login;\r\n\r\n    registerData.confirm_success_url = this.options.registerAccountCallback;\r\n\r\n    return this.http.post<ApiResponse>(\r\n      this.getServerPath() + this.options.registerAccountPath, registerData\r\n    );\r\n  }\r\n\r\n  // Delete Account\r\n  deleteAccount(): Observable<ApiResponse> {\r\n    return this.http.delete<ApiResponse>(this.getServerPath() + this.options.deleteAccountPath);\r\n  }\r\n\r\n  // Sign in request and set storage\r\n  signIn(signInData: SignInData, additionalData?: any): Observable<ApiResponse> {\r\n    this.userType.next((signInData.userType == null) ? null : this.getUserTypeByName(signInData.userType));\r\n\r\n    const body = {\r\n      [this.options.loginField]: signInData.login,\r\n      password: signInData.password\r\n    };\r\n\r\n    if (additionalData !== undefined) {\r\n      body.additionalData = additionalData;\r\n    }\r\n\r\n    const observ = this.http.post<ApiResponse>(\r\n      this.getServerPath() + this.options.signInPath, body\r\n    ).pipe(share());\r\n\r\n    observ.subscribe(res => this.userData.next(res.data));\r\n\r\n    return observ;\r\n  }\r\n\r\n  signInOAuth(oAuthType: string, inAppBrowser?: TokenInAppBrowser<any, any>, platform?: TokenPlatform) {\r\n\r\n    const oAuthPath: string = this.getOAuthPath(oAuthType);\r\n    const callbackUrl = `${this.global.location.origin}/${this.options.oAuthCallbackPath}`;\r\n    const oAuthWindowType: string = this.options.oAuthWindowType;\r\n    const authUrl: string = this.getOAuthUrl(oAuthPath, callbackUrl, oAuthWindowType);\r\n\r\n    if (oAuthWindowType === 'newWindow' ||\r\n      (oAuthWindowType == 'inAppBrowser' && (!platform || !platform.is('cordova') || !(platform.is('ios') || platform.is('android'))))) {\r\n      const oAuthWindowOptions = this.options.oAuthWindowOptions;\r\n      let windowOptions = '';\r\n\r\n      if (oAuthWindowOptions) {\r\n        for (const key in oAuthWindowOptions) {\r\n          if (oAuthWindowOptions.hasOwnProperty(key)) {\r\n              windowOptions += `,${key}=${oAuthWindowOptions[key]}`;\r\n          }\r\n        }\r\n      }\r\n\r\n      const popup = window.open(\r\n          authUrl,\r\n          '_blank',\r\n          `closebuttoncaption=Cancel${windowOptions}`\r\n      );\r\n      return this.requestCredentialsViaPostMessage(popup);\r\n    } else if (oAuthWindowType == 'inAppBrowser') {\r\n      let oAuthBrowserCallback = this.options.oAuthBrowserCallbacks[oAuthType];\r\n      if (!oAuthBrowserCallback) {\r\n        throw new Error(`To login with oAuth provider ${oAuthType} using inAppBrowser the callback (in oAuthBrowserCallbacks) is required.`);\r\n      }\r\n      // let oAuthWindowOptions = this.options.oAuthWindowOptions;\r\n      // let windowOptions = '';\r\n\r\n      //  if (oAuthWindowOptions) {\r\n      //     for (let key in oAuthWindowOptions) {\r\n      //         windowOptions += `,${key}=${oAuthWindowOptions[key]}`;\r\n      //     }\r\n      // }\r\n\r\n      let browser = inAppBrowser.create(\r\n          authUrl,\r\n          '_blank',\r\n          'location=no'\r\n      );\r\n\r\n      return new Observable((observer) => {\r\n        browser.on('loadstop').subscribe((ev: any) => {\r\n          if (ev.url.indexOf(oAuthBrowserCallback) > -1) {\r\n            browser.executeScript({code: \"requestCredentials();\"}).then((credentials: any) => {\r\n              this.getAuthDataFromPostMessage(credentials[0]);\r\n\r\n              let pollerObserv = interval(400);\r\n\r\n              let pollerSubscription = pollerObserv.subscribe(() => {\r\n                if (this.userSignedIn()) {\r\n                  observer.next(this.authData);\r\n                  observer.complete();\r\n\r\n                  pollerSubscription.unsubscribe();\r\n                  browser.close();\r\n                }\r\n              }, (error: any) => {\r\n                observer.error(error);\r\n                observer.complete();\r\n             });\r\n            }, (error: any) => {\r\n              observer.error(error);\r\n              observer.complete();\r\n           });\r\n          }\r\n        }, (error: any) => {\r\n          observer.error(error);\r\n          observer.complete();\r\n        });\r\n      })\r\n    } else if (oAuthWindowType === 'sameWindow') {\r\n      this.global.location.href = authUrl;\r\n      return undefined;\r\n    } else {\r\n      throw new Error(`Unsupported oAuthWindowType \"${oAuthWindowType}\"`);\r\n    }\r\n  }\r\n\r\n  processOAuthCallback(): void {\r\n    this.getAuthDataFromParams();\r\n  }\r\n\r\n  // Sign out request and delete storage\r\n  signOut(): Observable<ApiResponse> {\r\n    return this.http.delete<ApiResponse>(this.getServerPath() + this.options.signOutPath)\r\n      // Only remove the localStorage and clear the data after the call\r\n      .pipe(\r\n        finalize(() => {\r\n            this.localStorage.removeItem('accessToken');\r\n            this.localStorage.removeItem('client');\r\n            this.localStorage.removeItem('expiry');\r\n            this.localStorage.removeItem('tokenType');\r\n            this.localStorage.removeItem('uid');\r\n\r\n            this.authData.next(null);\r\n            this.userType.next(null);\r\n            this.userData.next(null);\r\n          }\r\n        )\r\n      );\r\n  }\r\n\r\n  // Validate token request\r\n  validateToken(): Observable<ApiResponse> {\r\n    const observ = this.http.get<ApiResponse>(\r\n      this.getServerPath() + this.options.validateTokenPath\r\n    ).pipe(share());\r\n\r\n    observ.subscribe(\r\n      (res) => this.userData.next(res.data),\r\n      (error) => {\r\n        if (error.status === 401 && this.options.signOutFailedValidate) {\r\n          this.signOut();\r\n        }\r\n    });\r\n\r\n    return observ;\r\n  }\r\n\r\n  // Update password request\r\n  updatePassword(updatePasswordData: UpdatePasswordData): Observable<ApiResponse> {\r\n\r\n    if (updatePasswordData.userType != null) {\r\n      this.userType.next(this.getUserTypeByName(updatePasswordData.userType));\r\n    }\r\n\r\n    let args: any;\r\n\r\n    if (updatePasswordData.passwordCurrent == null) {\r\n      args = {\r\n        password:               updatePasswordData.password,\r\n        password_confirmation:  updatePasswordData.passwordConfirmation\r\n      };\r\n    } else {\r\n      args = {\r\n        current_password:       updatePasswordData.passwordCurrent,\r\n        password:               updatePasswordData.password,\r\n        password_confirmation:  updatePasswordData.passwordConfirmation\r\n      };\r\n    }\r\n\r\n    if (updatePasswordData.resetPasswordToken) {\r\n      args.reset_password_token = updatePasswordData.resetPasswordToken;\r\n    }\r\n\r\n    const body = args;\r\n    return this.http.put<ApiResponse>(this.getServerPath() + this.options.updatePasswordPath, body);\r\n  }\r\n\r\n  // Reset password request\r\n  resetPassword(resetPasswordData: ResetPasswordData, additionalData?: any): Observable<ApiResponse> {\r\n    \r\n    \r\n    if (additionalData !== undefined) {\r\n      resetPasswordData.additionalData = additionalData;\r\n    }\r\n\r\n    this.userType.next(\r\n      (resetPasswordData.userType == null) ? null : this.getUserTypeByName(resetPasswordData.userType)\r\n    );\r\n\r\n    const body = {\r\n      [this.options.loginField]: resetPasswordData.login,\r\n      redirect_url: this.options.resetPasswordCallback\r\n    };\r\n\r\n    return this.http.post<ApiResponse>(this.getServerPath() + this.options.resetPasswordPath, body);\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * Construct Paths / Urls\r\n   *\r\n   */\r\n\r\n  private getUserPath(): string {\r\n    return (this.userType.value == null) ? '' : this.userType.value.path + '/';\r\n  }\r\n\r\n  private getApiPath(): string {\r\n    let constructedPath = '';\r\n\r\n    if (this.options.apiBase != null) {\r\n      constructedPath += this.options.apiBase + '/';\r\n    }\r\n\r\n    if (this.options.apiPath != null) {\r\n      constructedPath += this.options.apiPath + '/';\r\n    }\r\n\r\n    return constructedPath;\r\n  }\r\n\r\n  private getServerPath(): string {\r\n    return this.getApiPath() + this.getUserPath();\r\n  }\r\n\r\n  private getOAuthPath(oAuthType: string): string {\r\n    let oAuthPath: string;\r\n\r\n    oAuthPath = this.options.oAuthPaths[oAuthType];\r\n\r\n    if (oAuthPath == null) {\r\n      oAuthPath = `/auth/${oAuthType}`;\r\n    }\r\n\r\n    return oAuthPath;\r\n  }\r\n\r\n  private getOAuthUrl(oAuthPath: string, callbackUrl: string, windowType: string): string {\r\n    let url: string;\r\n\r\n    url =   `${this.options.oAuthBase}/${oAuthPath}`;\r\n    url +=  `?omniauth_window_type=${windowType}`;\r\n    url +=  `&auth_origin_url=${encodeURIComponent(callbackUrl)}`;\r\n\r\n    if (this.userType.value != null) {\r\n      url += `&resource_class=${this.userType.value.name}`;\r\n    }\r\n\r\n    return url;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * Get Auth Data\r\n   *\r\n   */\r\n\r\n  // Try to load auth data\r\n  private tryLoadAuthData(): void {\r\n\r\n    const userType = this.getUserTypeByName(this.localStorage.getItem('userType'));\r\n\r\n    if (userType) {\r\n      this.userType.next(userType);\r\n    }\r\n\r\n    this.getAuthDataFromStorage();\r\n\r\n    if (this.activatedRoute) {\r\n      this.getAuthDataFromParams();\r\n    }\r\n\r\n    // if (this.authData) {\r\n    //     this.validateToken();\r\n    // }\r\n  }\r\n\r\n  // Parse Auth data from response\r\n  public getAuthHeadersFromResponse(data: HttpResponse<any> | HttpErrorResponse): void {\r\n    const headers = data.headers;\r\n\r\n    const authData: AuthData = {\r\n      accessToken:    headers.get('access-token'),\r\n      client:         headers.get('client'),\r\n      expiry:         headers.get('expiry'),\r\n      tokenType:      headers.get('token-type'),\r\n      uid:            headers.get('uid')\r\n    };\r\n\r\n    this.setAuthData(authData);\r\n  }\r\n\r\n  // Parse Auth data from post message\r\n  private getAuthDataFromPostMessage(data: any): void {\r\n    const authData: AuthData = {\r\n      accessToken:    data['auth_token'],\r\n      client:         data['client_id'],\r\n      expiry:         data['expiry'],\r\n      tokenType:      'Bearer',\r\n      uid:            data['uid']\r\n    };\r\n\r\n    this.setAuthData(authData);\r\n  }\r\n\r\n  // Try to get auth data from storage.\r\n  public getAuthDataFromStorage(): void {\r\n\r\n    const authData: AuthData = {\r\n      accessToken:    this.localStorage.getItem('accessToken'),\r\n      client:         this.localStorage.getItem('client'),\r\n      expiry:         this.localStorage.getItem('expiry'),\r\n      tokenType:      this.localStorage.getItem('tokenType'),\r\n      uid:            this.localStorage.getItem('uid')\r\n    };\r\n\r\n    if (this.checkAuthData(authData)) {\r\n      this.authData.next(authData);\r\n    }\r\n  }\r\n\r\n  // Try to get auth data from url parameters.\r\n  private getAuthDataFromParams(): void {\r\n    this.activatedRoute.queryParams.subscribe(queryParams => {\r\n      const authData: AuthData = {\r\n        accessToken:    queryParams['token'] || queryParams['auth_token'],\r\n        client:         queryParams['client_id'],\r\n        expiry:         queryParams['expiry'],\r\n        tokenType:      'Bearer',\r\n        uid:            queryParams['uid']\r\n      };\r\n\r\n      if (this.checkAuthData(authData)) {\r\n        this.authData.next(authData);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Set Auth Data\r\n   *\r\n   */\r\n\r\n  // Write auth data to storage\r\n  private setAuthData(authData: AuthData): void {\r\n    if (this.checkAuthData(authData)) {\r\n\r\n      this.authData.next(authData);\r\n\r\n      this.localStorage.setItem('accessToken', authData.accessToken);\r\n      this.localStorage.setItem('client', authData.client);\r\n      this.localStorage.setItem('expiry', authData.expiry);\r\n      this.localStorage.setItem('tokenType', authData.tokenType);\r\n      this.localStorage.setItem('uid', authData.uid);\r\n\r\n      if (this.userType.value != null) {\r\n        this.localStorage.setItem('userType', this.userType.value.name);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * Validate Auth Data\r\n   *\r\n   */\r\n\r\n  // Check if auth data complete and if response token is newer\r\n  private checkAuthData(authData: AuthData): boolean {\r\n\r\n    if (\r\n      authData.accessToken != null &&\r\n      authData.client != null &&\r\n      authData.expiry != null &&\r\n      authData.tokenType != null &&\r\n      authData.uid != null\r\n    ) {\r\n      if (this.authData.value != null) {\r\n        return authData.expiry >= this.authData.value.expiry;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * OAuth\r\n   *\r\n   */\r\n\r\n  private requestCredentialsViaPostMessage(authWindow: any): Observable<any> {\r\n    const pollerObserv = interval(500);\r\n\r\n    const responseObserv = fromEvent(this.global, 'message').pipe(\r\n      pluck('data'),\r\n      filter(this.oAuthWindowResponseFilter)\r\n    );\r\n\r\n    responseObserv.subscribe(\r\n      this.getAuthDataFromPostMessage.bind(this)\r\n    );\r\n\r\n    const pollerSubscription = pollerObserv.subscribe(() => {\r\n      if (authWindow.closed) {\r\n        pollerSubscription.unsubscribe();\r\n      } else {\r\n        authWindow.postMessage('requestCredentials', '*');\r\n      }\r\n    });\r\n\r\n    return responseObserv;\r\n  }\r\n\r\n  private oAuthWindowResponseFilter(data: any): any {\r\n    if (data.message === 'deliverCredentials' || data.message === 'authFailure') {\r\n      return data;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * Utilities\r\n   *\r\n   */\r\n\r\n  // Match user config by user config name\r\n  private getUserTypeByName(name: string): UserType {\r\n    if (name == null || this.options.userTypes == null) {\r\n      return null;\r\n    }\r\n\r\n    return this.options.userTypes.find(\r\n      userType => userType.name === name\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpRequest, HttpInterceptor, HttpHandler, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { AngularTokenService } from './angular-token.service';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AngularTokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor( private tokenService: AngularTokenService ) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    // Get auth data from local storage\r\n    this.tokenService.getAuthDataFromStorage();\r\n\r\n    // Add the headers if the request is going to the configured server\r\n    const authData = this.tokenService.authData.value;\r\n\r\n    if (authData &&\r\n      (this.tokenService.tokenOptions.apiBase === null || req.url.match(this.tokenService.tokenOptions.apiBase))) {\r\n\r\n      const headers = {\r\n        'access-token': authData.accessToken,\r\n        'client':       authData.client,\r\n        'expiry':       authData.expiry,\r\n        'token-type':   authData.tokenType,\r\n        'uid':          authData.uid\r\n      };\r\n\r\n      req = req.clone({\r\n        setHeaders: headers\r\n      });\r\n    }\r\n\r\n    return next.handle(req).pipe(tap(\r\n        res => this.handleResponse(res),\r\n        err => this.handleResponse(err)\r\n    ));\r\n  }\r\n\r\n\r\n  // Parse Auth data from response\r\n  private handleResponse(res: HttpResponse<any> | HttpErrorResponse | HttpEvent<any>): void {\r\n    if (res instanceof HttpResponse || res instanceof HttpErrorResponse) {\r\n      if (this.tokenService.tokenOptions.apiBase === null || (res.url && res.url.match(this.tokenService.tokenOptions.apiBase))) {\r\n        this.tokenService.getAuthHeadersFromResponse(res);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { AngularTokenInterceptor } from './angular-token.interceptor';\r\nimport { AngularTokenOptions } from './angular-token.model';\r\nimport { ANGULAR_TOKEN_OPTIONS } from './angular-token.token';\r\n\r\nexport * from './angular-token.service';\r\n\r\n@NgModule()\r\nexport class AngularTokenModule {\r\n\r\n  constructor(@Optional() @SkipSelf() parentModule: AngularTokenModule) {\r\n    if (parentModule) {\r\n      throw new Error('AngularToken is already loaded. It should only be imported in your application\\'s main module.');\r\n    }\r\n  }\r\n  static forRoot(options: AngularTokenOptions): ModuleWithProviders<AngularTokenModule> {\r\n    return {\r\n      ngModule: AngularTokenModule,\r\n      providers: [\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: AngularTokenInterceptor,\r\n          multi: true\r\n        },\r\n        options.angularTokenOptionsProvider ||\r\n        {\r\n          provide: ANGULAR_TOKEN_OPTIONS,\r\n          useValue: options\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.AngularTokenService"],"mappings":"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"}